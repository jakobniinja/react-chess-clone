[{"/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/index.tsx":"1","/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/reportWebVitals.ts":"2","/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/App.tsx":"3","/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/components/Chessboard/Chessboard.tsx":"4","/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/components/Tile/Tile.tsx":"5","/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/referee/Referee.ts":"6"},{"size":500,"mtime":1654024157988,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1654024157988,"results":"9","hashOfConfig":"8"},{"size":188,"mtime":1654024157988,"results":"10","hashOfConfig":"8"},{"size":7174,"mtime":1654420527581,"results":"11","hashOfConfig":"8"},{"size":836,"mtime":1654024157988,"results":"12","hashOfConfig":"8"},{"size":2268,"mtime":1654418868498,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vfn63z",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/index.tsx",[],["28","29"],"/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/reportWebVitals.ts",[],"/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/App.tsx",[],"/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/components/Chessboard/Chessboard.tsx",["30","31"],"/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/components/Tile/Tile.tsx",[],"/home/niinja/react/clones/coding-projects/reactjs-projects/chess-app/src/referee/Referee.ts",["32","33"],"import { parseCommandLine } from \"typescript\";\nimport { Z_ASCII } from \"zlib\";\nimport {\n  Piece,\n  PieceType,\n  TeamType,\n} from \"./../components/Chessboard/Chessboard\";\n\nexport default class Referee {\n  tileIsOccupied(x: number, y: number, boardState: Piece[]) {\n    console.log(\"tile is occupied\");\n\n    const piece = boardState.find((p) => p.x === x && p.y === y);\n\n    if (piece) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  tileIsOccupiedByOpp(\n    x: number,\n    y: number,\n    boardState: Piece[],\n    team: TeamType\n  ): boolean {\n    const piece = boardState.find(\n      (p) => p.x === x && p.y === y && p.team !== team\n    );\n    if (piece) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isAppasentMove = (\n    x: number,\n    y: number,\n    boardState: Piece[],\n    team: TeamType\n  ) => {\n    const pieceDirection = team === TeamType.OUR ? 1 : -1;\n    const piece = boardState.find(\n      (p) => p.x === x && p.y === y + pieceDirection\n    );\n    if (piece) {\n    } else {\n      console.log(\"appasentPiece\");\n    }\n  };\n\n\n  isValidMove(\n    px: number,\n    py: number,\n    x: number,\n    y: number,\n    type: PieceType,\n    team: TeamType,\n    boardState: Piece[]\n  ) {\n    // MOVEMENT LOGIC\n    if (type === PieceType.PAWN) {\n      const specialRow = team === TeamType.OUR ? 1 : 6;\n      const pawnDirection = team === TeamType.OUR ? 1 : -1;\n\n      if (px === x && py === specialRow && y - py === 2 * pawnDirection) {\n        if (\n          !this.tileIsOccupied(x, y, boardState) &&\n          !this.tileIsOccupied(x, y - pawnDirection, boardState)\n        ) {\n          return true;\n        }\n      } else if (px === x && y - py === pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState)) {\n          return true;\n        }\n      }\n      //ATTACK LOGIC\n      else if (x - px === -1 && y - py === pawnDirection) {\n        console.log(\"bottom - or upper left\");\n        if (this.tileIsOccupiedByOpp(x, y, boardState, team)) {\n          return true;\n        }\n      } else if (x - px === 1 && y - py === pawnDirection) {\n        console.log(\"bottom - or upper right\");\n        if (this.tileIsOccupiedByOpp(x, y, boardState, team)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":24},{"ruleId":"38","severity":1,"message":"42","line":190,"column":13,"nodeType":"40","messageId":"41","endLine":190,"endColumn":26},{"ruleId":"38","severity":1,"message":"43","line":1,"column":10,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"44","line":2,"column":10,"nodeType":"40","messageId":"41","endLine":2,"endColumn":17},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'isValidElement' is defined but never used.","Identifier","unusedVar","'attackedPiece' is assigned a value but never used.","'parseCommandLine' is defined but never used.","'Z_ASCII' is defined but never used.","no-global-assign","no-unsafe-negation"]